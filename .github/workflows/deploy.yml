name: 'Release'
on:
  push:
      tags:
        - v* # Run only on version tags
jobs:
  push:
    name: 'Build and Push'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - uses: olegtarasov/get-tag@v2.1
        id: tagName
      - name: Static files
        run: |
            mkdir -p build
            cp -r public build/public 
            cp -r views build/views
      - name: run
        uses: cedrickring/golang-action@1.5.1
        with:
          args: CGO_ENABLED=0 go build -o build/front ./cmd/front
      - name: Build & Push Container
        uses: opspresso/action-docker@master
        with:
          args: --docker
        env:
          USERNAME: ${{ secrets.DOCKER_USERNAME }}
          PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          BUILD_PATH: build
          DOCKERFILE: "Dockerfile"
          IMAGE_NAME: "telliottio/front"
          TAG_NAME: ${{ steps.tagName.outputs.tag }}
          LATEST: "false"
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - uses: olegtarasov/get-tag@v2
        id: tagName
      - name: 'Checkout deployments'
        uses: actions/checkout@master
        with:
          ref: deploy
          path: build/deployment
      - name: Update deployment content
        run: | 
            cd build/deployment
            rm -rf *
            cp -a ../../deployment/. .
            sed 's/newTag: latest/newTag: ${{ steps.tagName.outputs.tag }}/' ../../deployment/kustomization.yaml > kustomization.yaml
      - name: Commit
        run: |
            cd build/deployment
            git config --global user.email "action@github.com"
            git config --global user.name "GitHub Action"
            git add -A
            git commit -m "${{ steps.tagName.outputs.tag }}"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: deploy
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: build/deployment